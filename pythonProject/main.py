import math

#1 გამოთვალეთ შემდეგი გამოსახულება 4-2 3 +5*2-3/2 და დაბეჭდეთ შედეგი ეკრანზე.
print(4-2*2*2+5*2-3/2)

#..................................
#2დაწერეთ პროგრამა, რომელიც შეყვანილ ათობით რიცხვს გადაიყვანს ორობითში.
a = int(input("შეიყვანე რიცხვი"))
def  binary(a):
    x= bin(a).replace("0b", "")
    print(x)
binary(a)
#............................
#3დაწერეთ პროგრამა, რომელიც user-ს შეეკითხება თვეში სამუშაო საათების რაოდენობას და საათობრივ სახელფასო
#განაკვეთს. შედეგად დაბეჭდავს ყოველთვიური ხელფასის ოდენობას.
workingTime = int(input("შეიყვანეთ სამუშაო საათები"))
salaryForHour = int(input("შეიყვანეთ თქვენი საათობრივი ანაზღაურება"))
def salary(a, b):
    print(a*b)

salary(workingTime,salaryForHour)
#....................................

#4დაწერეთ პროგრამა, სადაც მომხმარებელი შეიყვანს 3 რიცხვს და პროგრამა დაბეჭდავს რიცხვების საშუალო არითმეტიკულს.
a=int(input("შეიყვანეთ პირველი რიცხვი"))
b=int(input("შეიყვანეთ მეორე რიცხვი"))
c=int(input("შეიყვანეთ მესამე რიცხვი"))
print ((a+b+c)/3)
#...................................
#5დაწერეთ პროგრამა რომელიც შეეკითხება user-ს სახელს და ასაკს. გამოთვალეთ რამდენ წელში გახდება
# 100 წლის და დაბეჭდეთ შესაბამისი ინფორმაცია.
name = input("შეიყვანეთ სახელი")
age= int(input("შეიყვანეთ ასაკი"))
hundredYearsOld=100 - age
print(name,"შენ გახდები 100 წლის",hundredYearsOld,"წელში")

#..............................
#6დაწერეთ პროგრამა, რომლის მეშვეობითაც შეიტანთ ნებისმიერ რიცხვს. თუ რიცხვი დადებითია, დაბეჭდოს ეკრანზ“Number is positive”.
number = int(input("შეიყვანეთ რიცხვი"))
if number >0:
    print("რიცხვი დადებითია")
elif number ==0:
    print("არც დადებითია და არც უარყოფითი")
else:
    print("უარყოფითია")
#....................................
#7დაწერეთ პროგრამა, რომლის მეშვეობითაც შეიტანთ ნებისმიერ რიცხვს. პროგრამამ შეამოწმოს, თუ შეყვანილი
#რიცხვი 10-ის ჯერადია, დაბეჭდოს “რიცხვი ბოლოვდება 0-ით”, თუ არადა დაბეჭდოს “რიცხვი არ ბოლოვდება 0-ით”.
#(გაითვალისწინეთ: 10-ის ჯერადი ნიშნავს რომ 10-ზე გაყოფისას ნაშთი არის 0).

y = int(input("შეიყვანეთ რიცხვი"))
if y%10==0:
    print("შეყვანილი რიცხვი 10-ის ჯერადია")

else:
    print("რიცხვი არ ბოლოვდება 0-ით")
#.........................................
#8დაწერეთ პროგრამა, რომლის მეშვეობითაც შეიტანთ ორ ნებისმიერ რიცხვს. პროგრამამ შეამოწმოს, თუ ორივე
#შეყვანილი რიცხვი 10-ზე მეტია, დაითვალეთ მათი საშუალო არითმეტიკული, თუ არადა დაითვალეთ მათი
#ნამრავლი. დაბეჭდეთ მიღებული შედეგი.
z=int(input("შეიყვანეთ პირველი რიცხვი"))
z1= int(input("შეიყვანეთ მეორე რიცხვი"))
if z +z1 >10:
    print((z+z1)/2)
else:
    print(z * z1)
#.....................................
#9დაწერეთ პროგრამა, რომლის გაშვებისას შეიყვანთ ნებისმიერ რიცხვს. იპოვეთ შეყვანილი რიცხვის ბოლო ციფრი და
#დაბეჭდეთ ეკრანზე.
a1 = input("number1")
print(a1[-1])
#....................................
#10 დაწერეთ პროგრამა, რომლის მეშვეობითაც შეიტანთ წელს და დაადგენთ არის თუ არა შეყვანილი რიცხვი ნაკიანი
#წელიწადი. მაგ: 2012, 2016 წლები ნაკიანია. გაითვალისწინეთ, ნაკიანია წელიწადი, რომელიც უნაშთოდ იყოფა
#ოთხზე, გარდა იმ წლებისა რომლებიც იყოფა 100-ზე მაგრამ არ იყოფა 400-ზე. მაგ. 2100, 2200, 2300 წლები არ არის
#ნაკიანი. 2000 წელი ნაკიანია.

year = int(input("შეიყვანეთ წელი"))
if  year % 400 == 0 or  year % 4 == 0  and  year % 100 != 0:
    print(year,"არის ნაკიანი")
else:
    print("NO")
#.......................................
#11 დაბეჭდეთ 5-ის ჯერადი რიცხვები 20-დან 125-ის ჩათვლით.

for i in range(20,125):
    if i %5==0:
        print(i)

#..................................
#12 დაბეჭდეთ 8-ის ჯერადი რიცხვები 200-დან 25-ის ჩათვლით კლებადობით.
listA=[]
for i in range(25,200):
    if i %8==0:
        listA.append(i)
print(listA)

index=len(listA)
while index !=0:
    print(listA[index-1])
    index -=1

#................................
#13 შეიყვანთ 2 რიცხვი. ციკლის გამოყენებით დაბეჭდეთ შეყვანილი რიცხვების საერთო გამყოფები. მაგ. 15-ის და 18-ის
#საერთო გამყოფებია: 1, 3
ricxvi1 =int(input("Number1"))
ricxvi2 = int(input("Number2"))
def printFactors(x,y):
    factorsOfFirstNumber = []
    for i in range(1, x + 1):
        if x % i == 0:
            factorsOfFirstNumber.append(i)


    factorsOfSecondNumber = []
    for i in range(1, y + 1):
        if y % i == 0:
            factorsOfSecondNumber.append(i)
    print(list(set(factorsOfFirstNumber).intersection(factorsOfSecondNumber)))
printFactors(ricxvi1,ricxvi2)

#...........................
#14 შეიყვანეთ 10 რიცხვი კლავიატურიდან ციკლის გამოყენებით. დაითვალეთ შეყვანილი რიცხვების საშუალო არითმეტიკული.
i = 0
count = 0
while i!=10:
    a =int(input("enter a number"))
    count+=a
    i +=1
#print(count/10)
#...................................
#15 დაითვალეთ 1-დან 100-ის ჩათვლით ლუწი რიცხვების ჯამი და დაბეჭდეთ შედეგი.
jami = 0
for i in range(1,100):
    if i %2==0:
        jami +=i
print(jami)
#....................................
#16 დაბეჭდეთ 1500-დან 2100-ის ჩათვლით რიცხვები რომლებიც არიან 7-ის და 5-ის ჯერადი ერთდროულად.
for i in range(1500,2100):
    if i %7 ==0 and i%5 ==0:
        print(i)

#...........................

#17 დაითვალეთ 1500-დან 2100-ის ჩათვლით რიცხვების ჯამი რომლებიც არიან 7-ის და 5-ის ჯერადი ერთდროულად.დაბეჭდეთ მიღებული შედეგი.
count1=0
for i in range(1500,2100):
    if i %7 ==0 and i%5 ==0:
        count1 +=i
    print(count1)

#...................................
#18 დაითვალეთ 1500-დან 2100-ის ჩათვლით რიცხვების ჯამი რომლებიც არიან 7-ის და 5-ის ჯერადი ერთდროულად.
#როგორც კი რიცხვების ჯამი გადააჭარბებს 20 000-ს, შეწყვიტეთ ციკლი. დაბეჭდეთ მიღებული ჯამი ეკრანზე.

count1=0
for i in range(1500,2100):
    if i %7 ==0 and i%5 ==0:
        count1 +=i
        if count1 > 20000:
            break
        print(count1)

#.........................

#19 დაითვალეთ 1500-დან 2100-ის ჩათვლით 5-ის ჯერადი რიცხვების რაოდენობა. დაბეჭდეთ შედეგი.

raodenoba =0
for i in range(1500,2100):
    if i %5 ==0:
        raodenoba +=1
print(raodenoba)

#...............................

#20 დაბეჭდეთ ეკრანზე 15-დან 150-მდე 5-ის ჯერადი რიცხვები გარდა 50-ის, 75, 80-ისა. გამოიყენეთ continue
#ოპერატორი.
for i in range(15,150):
    if i ==50 or i==75 or i==80:
        continue
    elif i%5==0:
        print(i)

#................................

#21 შეიყვანეთ 2 დადებითი მთელი რიცხვი. იპოვეთ ამ ორი რიცხვის უდიდესი საერთო გამყოფი.


num1 =int(input("Number1"))
num2 = int(input("Number2"))
def maxFactors(x,y):
    factorsOfFirstNumber = []
    for i in range(1, x + 1):
        if x % i == 0:
            factorsOfFirstNumber.append(i)


    factorsOfSecondNumber = []
    for i in range(1, y + 1):
        if y % i == 0:
            factorsOfSecondNumber.append(i)
    factorNumberList= list(set(factorsOfFirstNumber).intersection(factorsOfSecondNumber))
    maxNumber = factorNumberList[0]
    for i in factorNumberList:
        if i > maxNumber:
            maxNumber = i
    print(maxNumber)
maxFactors(num1,num2)
#................................................

#22 შეიყვანეთ 2 დადებითი მთელი რიცხვი. იპოვეთ ამ ორი რიცხვის უმცირესი საერთო ჯერადი.

mteliricxvi1 = int(input("შეიყვანეთ მთელი რიცხვი"))
mteliricxvi2 =int(input("შეიყვანეთ მეორე მთელი რიცხვი"))

def gcd(a,b):
    if a == 0:
        return b
    return gcd(b % a, a)

def lcm(a, b):
    print ((a / gcd(a, b)) * b)
lcm(mteliricxvi1,mteliricxvi2)

#............................

#23 შეიყვანეთ 10 რიცხვი ციკლის გამოყენებით. იპოვეთ რიცხვებს შორის უდიდესი კენტი რიცხვი და დაბეჭდეთ. თუ
#კენტი რიცხვი არ შეგხვდათ, გამოიტანეთ შესაბამისი შეტყობინება.
i=0
newList =[]
listOfOdd =[]
while i!=10:
    a =int(input("enter a number"))
    newList.append(a)
    i +=1
print(newList)
for i in newList:
    if i %2 ==1:
        listOfOdd.append(i)
maxOdd = listOfOdd[0]
print(listOfOdd)
for i in listOfOdd:
    if i>maxOdd:
        maxOdd = i
print(i)

#..................................

#24 შეიყვანეთ რიცხვი კლავიატურიდან. პროგრამამ უნდა დაბეჭდოს შეყვანილი რიცხვის ყველა გამყოფი. (მაგ. 18-ის
#გამოყოფებია: 1, 2, 3, 6, 9, 18)

w = int(input("შეიყვანე რიცხვი"))
l=[]
for i in range(1, w+1):
    if w%i==0:
       l.append(i)
print(l)

#...........................

#25 შეიტანეთ რიცხვი. დაადგინეთ შეტანილი რიცხვი არის თუ არა მარტივი რიცხვი და გამოიტანეთ შესაბამისი
#შეტყობინება (გაითვლისწინეთ: მარტივია რიცხვი, რომელსაც აქვს მხოლოდ ორი გამყოფი: ერთი და თავისი თავი).
w1 = int(input("შეიყვანე რიცხვი"))
l1=[]
for i in range(1, w1+1):
    if w1%i==0:
       l1.append(i)
print(l1)
if len(l1)==2 and l1[0]==1 and l1[1]==w1:
    print("შეყვანილი რიცხვი მარტივია")

#.................................

#26 დაბეჭდეთ 2-დან 1000-მდე ყველა მარტივი რიცხვი.
for num in range(2,100):
       for i in range(2,num):
           if (num % i) == 0:
               break
       else:
           print(num)

#.......................................

#27 დაბეჭდეთ 0-დან 100-მდე არსებული ფიბონაჩის რიცხვები (ფიბონაჩის რიცხვებია 1, 1, 2, 3, 5, 8, 13, ...).
a = 0
b = 1
f = 1
while b <= 100:
    f = a+b
    a = b
    b = f
    print(a)
#................................
#28 შეიყვანეთ ნებისმიერი რიცხი. იპოვეთ ამ რიცხვის ციფრთა რაოდენობა და დაბეჭდეთ.
inputNumber = input("შეიყვანეთ რიცხვი")
digitCount = 0
for i in inputNumber:
    digitCount +=1
print(digitCount)

#...............................
#29 შეიყვანეთ ნებისმიერი რიცხი. იპოვეთ ამ რიცხვის ციფრთა ჯამი და დაბეჭდეთ.

inputNumber1 = input("შეიყვანეთ რიცხვი")
digitCount1 = 0
for i in inputNumber1:
    digitCount1 +=int(i)
print(digitCount1)

#..............................

#30 შეიყვანეთ ნებისმიერი რიცხი. დაბეჭდეთ შეტანილი რიცხვი შებრუნებული სახით.
inputNumber2 = input("შეიყვანეთ რიცხვი")
for i in reversed(inputNumber2):
    print(i)
#..........................................


#32 შეიყვანეთ რიცხვი. დათვალეთ ამ რიცხვის ფაქტორიალი და დაბეჭდეთ. მაგ. 5-ის ფაქტორიალი იგივია რაც

numb = int(input("enter a number"))
factorialCount = 1
for i in range(1,numb):
    factorialCount = factorialCount*i
print(factorialCount)
#........................................
#31 შეიყვანეთ ნებისმიერი რიცხი. დაადგინეთ არის თუ არა შეტანილი რიცხვი პალინდრომი. (მითითება: პალინდრომია
#რიცხვი, რომელიც მარჯვნიდან და მარცხნიდან ერთნაირად იკითხება). მაგ. 12521
def isPalindrome(s):
    if s == s[::-1]:
        print("yes")
isPalindrome("12321")
#........................

#33 დაწერეთ პროგრამა რომელიც ეკრანზე გამოიტანს შემდეგ გამოსახულებას. მითითება: გამოიყენეთ 2 ჩადგმული for ციკლი.

